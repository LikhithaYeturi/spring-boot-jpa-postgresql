name: Java CI with Maven
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  lint:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
          - name: Super-Linter
            uses: github/super-linter@v4.10.1
  test:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
          - name: Run the Maven verify phase
            run: mvn --batch-mode --update-snapshots verify
          - name: Test with Maven
            run: mvn test
          - run: exit 1
            continue-on-error: false
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get-Code
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Maven
        run: sudo apt-get install -y maven
      - name: Install Maven dependencies
        run: mvn dependency:resolve
      - name: Run Maven clean install
        run: mvn clean install
      - run : |
          cd target 
          ls
      - name: Uploading War file as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: War File
          path: target/spring-boot-jpa-postgresql-0.0.1-SNAPSHOT.war      
  postgresql:
    runs-on: ubuntu-latest
    services:
      postgres_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: testdb
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Run tests
      run: mvn test
  copy-file:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Pushes test file
      uses: LikhithaYeturi/spring-boot-jpa-postgresql@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source_file: 'target/spring-boot-jpa-postgresql-0.0.1-SNAPSHOT.war'
        destination_repo: 'MonishaSivakumar98/test'
        destination_folder: 'main'
        user_email: 'monishasivakumar55@gmail.com'
        user_name: 'MonishaSivakumar98'
        commit_message: 'A custom message for the commit'

