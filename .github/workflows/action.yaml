name: Java CI with Maven
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  lint:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
          - name: Super-Linter
            uses: github/super-linter@v4.10.1
  test:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
          - name: Run the Maven verify phase
            run: mvn --batch-mode --update-snapshots verify
          - name: Test with Maven
            run: mvn test
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get-Code
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Maven
        run: sudo apt-get install -y maven
      - name: Install Maven dependencies
        run: mvn dependency:resolve
      - name: Run Maven clean install
        run: mvn clean install
      - run : |
          cd target 
          ls
      - name: Uploading War file as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: War File
          path: target/spring-boot-jpa-postgresql-0.0.1-SNAPSHOT.war      
  Gradle-job:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build


